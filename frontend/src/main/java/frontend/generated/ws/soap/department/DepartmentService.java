
package frontend.generated.ws.soap.department;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "departmentService", targetNamespace = "http://soap.webservice.backend/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DepartmentService {


    /**
     * 
     * @param department
     * @return
     *     returns frontend.generated.ws.soap.department.WebServiceResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateDepartment", targetNamespace = "http://soap.webservice.backend/", className = "frontend.generated.ws.soap.department.UpdateDepartment")
    @ResponseWrapper(localName = "updateDepartmentResponse", targetNamespace = "http://soap.webservice.backend/", className = "frontend.generated.ws.soap.department.UpdateDepartmentResponse")
    public WebServiceResult updateDepartment(
        @WebParam(name = "department", targetNamespace = "")
        Department department);

    /**
     * 
     * @param code
     * @return
     *     returns frontend.generated.ws.soap.department.WebServiceResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteDepartment", targetNamespace = "http://soap.webservice.backend/", className = "frontend.generated.ws.soap.department.DeleteDepartment")
    @ResponseWrapper(localName = "deleteDepartmentResponse", targetNamespace = "http://soap.webservice.backend/", className = "frontend.generated.ws.soap.department.DeleteDepartmentResponse")
    public WebServiceResult deleteDepartment(
        @WebParam(name = "code", targetNamespace = "")
        String code);

    /**
     * 
     * @param department
     * @return
     *     returns frontend.generated.ws.soap.department.WebServiceResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addDepartment", targetNamespace = "http://soap.webservice.backend/", className = "frontend.generated.ws.soap.department.AddDepartment")
    @ResponseWrapper(localName = "addDepartmentResponse", targetNamespace = "http://soap.webservice.backend/", className = "frontend.generated.ws.soap.department.AddDepartmentResponse")
    public WebServiceResult addDepartment(
        @WebParam(name = "department", targetNamespace = "")
        Department department);

    /**
     * 
     * @return
     *     returns frontend.generated.ws.soap.department.WebServiceResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDepartments", targetNamespace = "http://soap.webservice.backend/", className = "frontend.generated.ws.soap.department.GetDepartments")
    @ResponseWrapper(localName = "getDepartmentsResponse", targetNamespace = "http://soap.webservice.backend/", className = "frontend.generated.ws.soap.department.GetDepartmentsResponse")
    public WebServiceResult getDepartments();

    /**
     * 
     * @param code
     * @return
     *     returns frontend.generated.ws.soap.department.WebServiceResult
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDepartment", targetNamespace = "http://soap.webservice.backend/", className = "frontend.generated.ws.soap.department.GetDepartment")
    @ResponseWrapper(localName = "getDepartmentResponse", targetNamespace = "http://soap.webservice.backend/", className = "frontend.generated.ws.soap.department.GetDepartmentResponse")
    public WebServiceResult getDepartment(
        @WebParam(name = "code", targetNamespace = "")
        String code);

}
