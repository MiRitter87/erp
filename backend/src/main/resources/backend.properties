
account.deleteError      = An error occurred while trying to delete account with ID {0}.
account.deleteSuccess    = The account with ID {0} has been successfully deleted.
account.getAccountsError = An error occurred during account data retrieval.
account.getError         = An error occurred while trying to get data of account with ID {0}.
account.notFound         = The account with ID {0} could not be found.
account.updateError      = An error occurred while trying to update the account with ID {0}.
account.updateSuccess    = The account with ID {0} has been successfully updated.
account.updateUnchanged  = The data of the account with ID {0} have not been changed. Saving is not necessary.

businessPartner.addError                 = An error occurred while trying to add a new business partner.
businessPartner.addSuccess               = The business partner has been successfully created.
businessPartner.closeFailed              = Error while trying to close session for business partner data access.
businessPartner.deleteError              = An error occurred while trying to delete business partner with ID {0}.
businessPartner.deleteSuccess            = The business partner with id {0} has been successfully deleted.
businessPartner.getBusinessPartnersError = An error occurred during business partner data retrieval.
businessPartner.getError                 = An error occurred while trying to get data of business partner with ID {0}.
businessPartner.notFound                 = The business partner with id {0} could not be found.
businessPartner.updateError              = An error occurred while trying to update the business partner {0}.
businessPartner.updateSuccess            = The business partner {0} has been successfully updated.
businessPartner.updateUnchanged          = The data of the business partner with ID {0} have not been changed. Saving is not necessary.

department.addError                       = An error occurred while trying to add a new department.
department.addExistsError                 = The department with the code {0} is already existing.
department.addSuccess                     = The department has been successfully created.
department.closeFailed                    = Error while trying to close session for department data access.
department.codeChangeError                = A change of the department could is not allowed.
department.deleteError                    = An error occurred while trying to delete department with code {0}.
department.deleteSuccess                  = The department with code {0} has been successfully deleted.
department.getDepartmentsError            = An error occurred during department data retrieval.
department.getError                       = An error occurred while trying to get data of department with code {0}.
department.notFound                       = The department with code {0} could not be found.
department.updateError                    = An error occurred while trying to update the department {0}.
department.updateSuccess                  = The department {0} has been successfully updated.
department.updateUnchanged                = The data of the department have not been changed. Saving is not necessary.
department.validation.employeeAlreadyHead = The employee with ID {0} is already head of department {1}. An employee can only be head of a single department.
department.validation.headMissing         = The head of department is mandatory.

employee.addError                = An error occurred while trying to add a new employee.
employee.addSuccess              = The employee has been successfully created.
employee.deleteError             = An error occurred while trying to delete employee with ID {0}.
employee.deleteSuccess           = The employee with ID {0} has been successfully deleted.
employee.getEmployeesError       = An error occurred during employee data retrieval.
employee.getError                = An error occurred while trying to get data of employee with ID {0}.
employee.notFound                = The employee with ID {0} could not be found.
employee.updateError             = An error occurred while trying to update an employee.
employee.updateSuccess           = The employee has been successfully updated.
employee.updateUnchanged         = The data of the employee have not been changed. Saving is not necessary.
employee.validation.headDeletion = The employee with the ID {0} can not be deleted because he is head of department {1}. An employee must not be head of any department in order to be deleted.

image.addError                       = An error occurred while trying to add a new image.
image.addSuccess                     = The image has been successfully created.
image.deleteError                    = An error occurred while trying to delete image with ID {0}.
image.deleteSuccess                  = The image with ID {0} has been successfully deleted.
image.getError                       = An error occurred while trying to get image with ID {0}.
image.metaData.getError              = An error occurred while trying to get meta data of image with ID {0}.
image.metaData.notFound              = The meta data of image with ID {0} could not be found.
image.metaData.updateError           = An error occurred while trying to update the meta data of image {0}.
image.metaData.updateSuccess         = The meta data of image {0} have been successfully updated.
image.metaData.updateUnchanged       = The meta data of image {0} have not been changed. Saving is not necessary.
image.notFound                       = The image with ID {0} could not be found.

imageCleanupController.cleanupFailed = Determination and deletion of images without reference failed.
imageCleanupController.imagesDeleted = {0} images without a reference to any master data object have been deleted.

material.addError          = An error occurred while trying to add a new material.
material.addSuccess        = The material has been successfully created.
material.closeFailed       = Error while trying to close session for material data access.
material.deleteError       = An error occurred while trying to delete material with ID {0}.
material.deleteSuccess     = The material with ID {0} has been successfully deleted.
material.getError          = An error occurred while trying to get data of material with ID {0}.
material.getMaterialsError = An error occurred during material data retrieval.
material.notFound          = The material with ID {0} could not be found.
material.updateError       = An error occurred while trying to update the material with ID {0}.
material.updateSuccess     = The material with ID {0} has been successfully updated.
material.updateUnchanged   = The data of the material with ID {0} have not been changed. Saving is not necessary.

purchaseOrder.addError               = An error occurred while trying to add a new purchase order.
purchaseOrder.addSuccess             = The purchase order has been successfully created.
purchaseOrder.deleteError            = An error occurred while trying to delete purchase order with ID {0}.
purchaseOrder.deleteSuccess          = The purchase order with ID {0} has been successfully deleted.
purchaseOrder.duplicateItemKey       = Purchase order {0} uses item id {1} multiple times. The item id has to be unique.
purchaseOrder.getError               = An error occurred while trying to get data of purchase order with ID {0}.
purchaseOrder.getPurchaseOrdersError = An error occurred during purchase order data retrieval.
purchaseOrder.noItemsGiven           = The purchase order has no items defined and can therefore not be saved.
purchaseOrder.notFound               = The purchase order with ID {0} could not be found.
purchaseOrder.updateError            = An error occurred while trying to update the purchase order with ID {0}.
purchaseOrder.updateSuccess          = The purchase order with ID {0} has been successfully updated.
purchaseOrder.updateUnchanged        = The data of the purchase order with ID {0} have not been changed. Saving is not necessary.

salesOrder.QuantityExceedsInventory = The ordered quantity of material {0} exceeds the inventory of {1} {2}.
salesOrder.addError                 = An error occurred while trying to add a new sales order.
salesOrder.addSuccess               = The sales order has been successfully created.
salesOrder.closeFailed              = Error while trying to close session for sales order data access.
salesOrder.deleteError              = An error occurred while trying to delete sales order with ID {0}.
salesOrder.deleteSuccess            = The sales order with ID {0} has been successfully deleted.
salesOrder.duplicateItemKey         = Sales order {0} uses item id {1} multiple times. The item id has to be unique.
salesOrder.getError                 = An error occurred while trying to get data of sales order with ID {0}.
salesOrder.getSalesOrdersError      = An error occurred during sales order data retrieval.
salesOrder.noItemsGiven             = The sales order has no items defined and can therefore not be saved.
salesOrder.notFound                 = The sales order with ID {0} could not be found.
salesOrder.updateError              = An error occurred while trying to update the sales order with ID {0}.
salesOrder.updateSuccess            = The sales order with ID {0} has been successfully updated.
salesOrder.updateUnchanged          = The data of the sales order with ID {0} have not been changed. Saving is not necessary.

status.started = The application has been successfully started.
status.stopped = The application has been successfully stopped.
